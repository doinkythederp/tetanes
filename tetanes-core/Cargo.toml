[package]
name = "tetanes-core"
version.workspace = true
rust-version.workspace = true
edition.workspace = true
license.workspace = true
description = "A NES Emulator written in Rust"
authors.workspace = true
readme = "README.md"
documentation.workspace = true
repository.workspace = true
homepage.workspace = true
categories = ["emulators"]
keywords = ["nes", "emulator"]

[lib]
crate-type = ["cdylib", "rlib"]

[lints.clippy]
all = "warn"
missing_const_for_fn = "warn"
print_literal = "warn"

[lints.rust]
future_incompatible = "warn"
nonstandard_style = "warn"
rust_2018_compatibility = "warn"
rust_2018_idioms = "warn"
rust_2021_compatibility = "warn"
unused = "warn"

[features]
default = ["cycle-accurate", "std"]
profiling = ["dep:puffin", "std"]
cycle-accurate = []
std = ["dep:dirs", "rand/std", "rand/std_rng"]

[dependencies]
bincode.workspace = true
bitflags = { version = "2.4", features = ["serde"] }
cfg-if.workspace = true
dirs = { workspace = true, optional = true }
# enum_dispatch = "0.3"
serde = { version = "1.0", features = ["derive"], default-features = false }
miniz_oxide = "0.7.3"
log = { version = "0.4.21", default-features = false }
rand = { version = "0.8", default-features = false, features = ["alloc"] }
snafu = { version = "0.8.2", default-features = false, features = [
    "rust_1_65",
    "unstable-core-error",
] }
tracing.workspace = true
enum_dispatch = { git = "https://github.com/QuarkContainer/enum_dispatch_clone.git", version = "0.3.8" }
hashbrown = { version = "0.14.5", features = ["serde"] }
libm = "0.2.8"
lazy_static = { version = "1.4.0", features = ["spin_no_std"] }
spin = "0.9.8"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
puffin = { workspace = true, optional = true }

[target.'cfg(target_vendor = "vex")'.dependencies]
vexide-core = "0.3.0"
unix_path = { version = "1.0.1", default-features = false, features = [
    "alloc",
] }
no_std_io = { version = "0.6.0", features = ["alloc", "nightly"] }
vex-sdk = "0.17.0"
rand_pcg = "0.3.1"

[target.'cfg(target_arch = "wasm32")'.dependencies]
puffin = { workspace = true, features = ["web"], optional = true }
web-time.workspace = true

[dev-dependencies]
# anyhow.workspace = true
# image.workspace = true
# serde_json.workspace = true

# [target.'cfg(not(target_arch = "wasm32")'.dev-dependencies]
# criterion = { version = "0.5", features = ["html_reports"] }

[[bench]]
name = "clock_frame"
harness = false
